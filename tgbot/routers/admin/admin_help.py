import re

from aiogram import Router, F, Bot
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext

router = Router(name=__name__)


class AdminAnswer(StatesGroup):
    answer = State()


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@router.callback_query(F.data == 'admin_answer')
async def admin_answer(call: CallbackQuery, state: FSMContext):
    message = call.message.text

    id_pattern = r'üÜî: (\d+)'

    match = re.search(id_pattern, message)

    if match:
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ ID
        user_id = match.group(1)
    else:
        await call.message.answer("ID –Ω–µ –Ω–∞–π–¥–µ–Ω")

    await state.update_data(user_id=user_id)

    await call.message.answer('‚ùï –í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å:')

    await state.set_state(AdminAnswer.answer)


# –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞ –∑–∞–ø—Ä–æ—Å
@router.message(AdminAnswer.answer)
async def send_answer(message: Message, bot: Bot, state: FSMContext):
    state_data = await state.get_data()
    user_id = state_data['user_id']

    try:
        await bot.send_message(chat_id=user_id, text='‚ùóÔ∏è–ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–† –û–¢–í–ï–¢–ò–õ –í–ê–ú‚ùóÔ∏è\n\n'
                                                     f'–û—Ç–≤–µ—Ç: {message.text}')
        await message.answer(f'‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!')
    except:
        await message.answer(f'üö´ –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}!')

    await state.clear()
