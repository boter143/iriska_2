from aiogram import Router, F, Bot
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext

from tgbot.database.db_users import Userx
from tgbot.data.config import ADMIN_ID
from tgbot.keyboards.inline_main import admin_answer_finl

router = Router(name=__name__)


class UserHelp(StatesGroup):
    help = State()


@router.message(Command(commands=['help']))
async def user_help(message: Message, state: FSMContext):
    await message.answer(f'<b>üÜò –ü–æ–º–æ—â—å</b>\n\n'
                         f'–ü–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –∫–∞–∫ –º–æ–∂–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ–ø–∏—Å–∞—Ç—å –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É!\n\n'
                         f'–ú–µ–¥–∏–∞, –≥–æ–ª–æ—Å–æ–≤—ã–µ, –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è\n\n'
                         f'<b>–ó–ê –°–ü–ê–ú –ú–û–ú–ï–ù–¢–ê–õ–¨–ù–´–ô –ë–ê–ù, –û–ñ–ò–î–ê–ô–¢–ï –û–¢–í–ï–¢–ê –í –¢–ï–ß–ï–ù–ò–ï 24 –ß–ê–°–û–í!</b>\n'
                         f'–î–ª—è –æ—Ç–º–µ–Ω—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Ç—Ä–æ–≥–æ: 0')

    await state.set_state(UserHelp.help)


@router.message(UserHelp.help)
async def send_help(message: Message, bot: Bot, state: FSMContext):
    if message.text == "0":
        return

    await message.answer('‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!\n'
                         '–û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞!')

    user = Userx.get(user_id=message.from_user.id)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –±–∞–Ω
    if user.user_ban == 0:
        user_ban = '‚úÖ –ù–µ –∑–∞–±–∞–Ω–µ–Ω'
    elif user.user_ban == 1:
        user_ban = '‚õîÔ∏è –ó–∞–±–∞–Ω–µ–Ω'

    try:
        await bot.send_message(chat_id=ADMIN_ID, text=f'üÜò #–ü–æ–º–æ—â—å\n\n'
                                                      f'üÜî: <code>{user.user_id}</code>\n'
                                                      f'{user_ban}\n\n'
                                                      f'–°–æ–æ–±—â–µ–Ω–∏–µ: {message.text}', reply_markup=admin_answer_finl())
    except:
        pass

    await state.clear()
